name: Main Workflow
on:
  push:
    branches:
      - main
      - dev
env:
  AWS_REGION: eu-west-1
  ECR_REGISTRY: 643578112146.dkr.ecr.eu-west-1.amazonaws.com
  ECR_REPO: crypticorn-trading-platform
  ACTIONS_ROLE: arn:aws:iam::643578112146:role/GitHubActionsStack-GitHubActionsRole4F1BBA26-4zweCyfcNyU5
  SERVICE_NAME: saveload-service
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build saveload-service
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile', '**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ACTIONS_ROLE }}
          role-session-name: GitHubActions
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push images to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ env.SERVICE_NAME }}-${{ github.ref_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
      - name: Delete untagged images from ECR
        run: |
          IMAGES_TO_DELETE=$(aws ecr list-images --region $AWS_REGION --repository-name $ECR_REPO --filter "tagStatus=UNTAGGED" --query 'imageIds[*]' --output json)
          if [ -n "$IMAGES_TO_DELETE" ]; then
            aws ecr batch-delete-image --region $AWS_REGION --repository-name $ECR_REPO --image-ids "$IMAGES_TO_DELETE" || true
          fi
      - name: Update Docker buildx cache
        run: |
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true
  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy saveload-service
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Copy Files to host
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          source: "./compose.yml"
          target: "/home/ubuntu/${{ env.SERVICE_NAME }}"
      - name: Run docker-compose on host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
            cd /home/ubuntu/${{ env.SERVICE_NAME }}
            echo "SECRET_KEY='${{ env.DJANGO_SECRET_KEY }}'" > .env
            docker compose up -d
